// <auto-generated />
using System;
using BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(EStoreDbContext))]
    partial class EStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Condiments"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Confections"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Dairy Products"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Grains/Cereals"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Meat/Poultry"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Produce"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Seafood"
                        });
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            City = "A",
                            CompanyName = "Administrator",
                            Country = "A",
                            Email = "admin@estore.com",
                            Password = "admin@@"
                        },
                        new
                        {
                            MemberId = 2,
                            City = "B",
                            CompanyName = "User",
                            Country = "B",
                            Email = "a@amail.com",
                            Password = "user@@"
                        },
                        new
                        {
                            MemberId = 3,
                            City = "C",
                            CompanyName = "User",
                            Country = "C",
                            Email = "b@bmail.com",
                            Password = "user@@"
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Freight = 0m,
                            MemberId = 2,
                            OrderDate = new DateTime(2023, 9, 27, 22, 50, 24, 313, DateTimeKind.Local).AddTicks(2883),
                            RequiredDate = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            ShippedDate = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            OrderId = 2,
                            Freight = 0m,
                            MemberId = 2,
                            OrderDate = new DateTime(2023, 9, 27, 22, 50, 24, 313, DateTimeKind.Local).AddTicks(2899),
                            RequiredDate = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            ShippedDate = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            OrderId = 3,
                            Freight = 0m,
                            MemberId = 3,
                            OrderDate = new DateTime(2023, 9, 27, 22, 50, 24, 313, DateTimeKind.Local).AddTicks(2901),
                            RequiredDate = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            ShippedDate = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            OrderId = 4,
                            Freight = 0m,
                            MemberId = 3,
                            OrderDate = new DateTime(2023, 9, 27, 22, 50, 24, 313, DateTimeKind.Local).AddTicks(2903),
                            RequiredDate = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            ShippedDate = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("BusinessObject.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 18.00m
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 19.00m
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 3,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 10.00m
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 4,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 22.00m
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 5,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 21.35m
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 6,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 25.00m
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 7,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 30.00m
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 8,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 40.00m
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 9,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 97.00m
                        },
                        new
                        {
                            OrderId = 4,
                            ProductId = 10,
                            Discount = 0f,
                            Quantity = 1,
                            UnitPrice = 31.00m
                        });
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ProductName = "Chai",
                            UnitPrice = 18.00m,
                            UnitsInStock = 39,
                            Weight = 1f
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            ProductName = "Chang",
                            UnitPrice = 19.00m,
                            UnitsInStock = 17,
                            Weight = 1f
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            ProductName = "Aniseed Syrup",
                            UnitPrice = 10.00m,
                            UnitsInStock = 13,
                            Weight = 1f
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            ProductName = "Chef Anton's Cajun Seasoning",
                            UnitPrice = 22.00m,
                            UnitsInStock = 53,
                            Weight = 1f
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            ProductName = "Chef Anton's Gumbo Mix",
                            UnitPrice = 21.35m,
                            UnitsInStock = 0,
                            Weight = 1f
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2,
                            ProductName = "Grandma's Boysenberry Spread",
                            UnitPrice = 25.00m,
                            UnitsInStock = 120,
                            Weight = 1f
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 7,
                            ProductName = "Uncle Bob's Organic Dried Pears",
                            UnitPrice = 30.00m,
                            UnitsInStock = 15,
                            Weight = 1f
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 2,
                            ProductName = "Northwoods Cranberry Sauce",
                            UnitPrice = 40.00m,
                            UnitsInStock = 6,
                            Weight = 1f
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 6,
                            ProductName = "Mishi Kobe Niku",
                            UnitPrice = 97.00m,
                            UnitsInStock = 29,
                            Weight = 1f
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 8,
                            ProductName = "Ikura",
                            UnitPrice = 31.00m,
                            UnitsInStock = 31,
                            Weight = 1f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
